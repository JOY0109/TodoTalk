
-- 1. 부서정보
CREATE TABLE DEPARTMENTS (
    DEPARTMENT_ID CHAR(36) PRIMARY KEY COMMENT 'ID(식별자)',
    DEPARTMENT_CODE VARCHAR(100) NOT NULL UNIQUE COMMENT '부서코드',
    DEPARTMENT_NAME VARCHAR(50) COMMENT '부서명',
    DEPARTMENT_DESCRIPTION VARCHAR(1000) COMMENT '부서비고'
);

-- 2. 팀정보
CREATE TABLE TEAMS (
    TEAM_ID CHAR(36) PRIMARY KEY COMMENT 'ID(식별자)',
    DEPARTMENT_ID CHAR(36) NOT NULL COMMENT '소속부서',
    TEAM_CODE VARCHAR(100) NOT NULL UNIQUE COMMENT '팀코드',
    TEAM_NAME VARCHAR(50) COMMENT '팀명',
    TEAM_DESCRIPTION VARCHAR(1000) COMMENT '팀 비고',
    FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID)
);

-- 3. 사용자 정보
CREATE TABLE USERS (
    USER_ID CHAR(36) PRIMARY KEY COMMENT 'ID(식별자)',
    LOGIN_ID VARCHAR(50) NOT NULL UNIQUE COMMENT '로그인 ID',
    LOGIN_PW VARCHAR(100) NOT NULL COMMENT '로그인 PW',
    REAL_NAME VARCHAR(50) NOT NULL COMMENT '이름',
    EMPLOYEE_NO INT NOT NULL UNIQUE COMMENT '사번',
    LOGIN_TIME DATETIME NOT NULL COMMENT '로그인시간',
    AUTH_ROLE VARCHAR(100) NOT NULL COMMENT '권한'
);

-- 4. 사용자 상세 정보
CREATE TABLE USER_PROFILES (
    USER_PROFILES_ID CHAR(36) PRIMARY KEY COMMENT 'ID(식별자)',
    USER_ID CHAR(36) NOT NULL COMMENT '사용자ID',
    POSITION VARCHAR(100) COMMENT '직급',
    OFFICE_PHONE VARCHAR(100) COMMENT '유선번호',
    MOBILE_PHONE VARCHAR(100) COMMENT '휴대전화번호',
    ADDRESS VARCHAR(200) COMMENT '주소',
    GENDER CHAR(1) COMMENT '성별',
    BIRTH_DATE INT COMMENT '생년월일',
    HIRE_DATE INT NOT NULL COMMENT '입사일',
    STATUS CHAR(2) NOT NULL COMMENT '상태',
    STATUS_UPDATE_DATE DATETIME COMMENT '상태변경일자',
    UNIQUE (USER_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

-- 5. 사용자/조직/팀 맵핑 테이블
CREATE TABLE USER_ORGS (
    USER_ORG_ID CHAR(36) PRIMARY KEY COMMENT 'ID(식별자)',
    USER_ID CHAR(36) NOT NULL COMMENT '사용자ID',
    DEPARTMENT_ID CHAR(36) NOT NULL COMMENT '부서ID',
    TEAM_ID CHAR(36) NOT NULL COMMENT '팀ID',
    UNIQUE (USER_ID, DEPARTMENT_ID, TEAM_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID),
    FOREIGN KEY (TEAM_ID) REFERENCES TEAMS(TEAM_ID)
);

-- 6. 프로젝트 정보
CREATE TABLE PROJECTS (
    PROJECT_ID CHAR(36) PRIMARY KEY COMMENT 'ID(식별자)',
    PROJECT_NAME VARCHAR(500) NOT NULL COMMENT '프로젝트명',
    PROJECT_START_DATE DATETIME NOT NULL COMMENT '프로젝트 시작일자',
    PROJECT_END_DATE DATETIME NOT NULL COMMENT '프로젝트 종료일자',
    PROJECT_STATUS CHAR(2) NOT NULL COMMENT '프로젝트상태',
    CREATED_BY CHAR(36) NOT NULL COMMENT '최초등록자',
    CREATED_AT DATETIME NOT NULL COMMENT '최초등록일시',
    UPDATED_BY CHAR(36) COMMENT '수정자',
    UPDATED_AT DATETIME COMMENT '수정일시'
);

-- 7. 프로젝트 참여자
CREATE TABLE PROJECT_MEMBERS (
    PROJECT_MEMBER_ID CHAR(36) PRIMARY KEY COMMENT 'ID(식별자)',
    PROJECT_ID CHAR(36) NOT NULL COMMENT '프로젝트ID',
    USER_ID CHAR(36) NOT NULL COMMENT '사용자ID',
    DEPARTMENT_ID CHAR(36) NOT NULL COMMENT '부서ID',
    TEAM_ID CHAR(36) NOT NULL COMMENT '팀ID',
    IS_PM CHAR(2) COMMENT 'PM여부',
    JOINED_AT DATETIME NOT NULL COMMENT '프로젝트 참여 일',
    ENDED_AT DATETIME COMMENT '프로젝트 참여 만료일',
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS(PROJECT_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID),
    FOREIGN KEY (TEAM_ID) REFERENCES TEAMS(TEAM_ID)
);

-- 8. 업무 정보
CREATE TABLE TASKS (
    TASK_ID CHAR(36) PRIMARY KEY COMMENT 'ID(식별자)',
    PROJECT_ID CHAR(36) NOT NULL COMMENT '프로젝트ID',
    DEPARTMENT_ID CHAR(36) NOT NULL COMMENT '담당부서ID',
    TEAM_ID CHAR(36) NOT NULL COMMENT '담당팀ID',
    TASK_NAME VARCHAR(500) NOT NULL COMMENT '업무명',
    TASK_DESCRIPTION VARCHAR(1000) COMMENT '업무설명',
    TASK_STATUS CHAR(2) COMMENT '업무상태',
    TASK_TYPE VARCHAR(50) COMMENT '업무 종류',
    PRIORITY CHAR(2) COMMENT '업무우선순위',
    CREATED_AT DATETIME NOT NULL COMMENT '등록일',
    DUE_DATE DATETIME COMMENT '업무 마감일',
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS(PROJECT_ID),
    FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID),
    FOREIGN KEY (TEAM_ID) REFERENCES TEAMS(TEAM_ID)
);

-- 9. 업무 담당자 맵핑
CREATE TABLE TASK_ASSIGNMENTS (
    TASK_ASSIGNMENT_ID CHAR(36) PRIMARY KEY COMMENT 'ID(식별자)',
    USER_ID CHAR(36) NOT NULL COMMENT '담당자',
    TASK_ID CHAR(36) NOT NULL COMMENT '업무ID',
    ROLES VARCHAR(100) COMMENT '역할',
    CREATED_BY CHAR(36) NOT NULL COMMENT '업무 최초 할당자',
    CREATED_AT DATETIME NOT NULL COMMENT '할당일',
    UPDATED_AT DATETIME COMMENT '수정일',
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (TASK_ID) REFERENCES TASKS(TASK_ID)
);

-- 10. 업무 변경 로그 (이력 한 줄은 반드시 하나의 변경만)
CREATE TABLE TASK_HISTORY (
    TASK_HISTORY_ID CHAR(36) PRIMARY KEY COMMENT 'ID(식별자)',
    TASK_ID CHAR(36) NOT NULL COMMENT '업무ID',
    USER_ID CHAR(36) NOT NULL COMMENT '변경한 사용자',
    CHANGED_FIELD VARCHAR(50) NOT NULL COMMENT '변경항목',
    OLD_VALUE VARCHAR(1000) NOT NULL COMMENT '변경 전',
    NEW_VALUE VARCHAR(1000) NOT NULL COMMENT '변경 후',
    CHANGED_TIME DATETIME NOT NULL COMMENT '변경시간',
    FOREIGN KEY (TASK_ID) REFERENCES TASKS(TASK_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);
